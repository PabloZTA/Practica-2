@page "/Investigadores/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService SweetAlertService


<h3>InvestigadorCreate</h3>

<PublicacionForm @ref="PublicacionForm" Publicaciones="Publicacion" OnSubmit="Create" ReturnAction="Return" />


@code {
    private Publicacion publicacion = new();
    private PublicacionForm PublicacionForm;



    private async Task Create()
    {
        var responseHttp = await repository.Post("/api/Publicacion", publicacion);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await SweetAlertService.FireAsync("Error", message);
            return;
        }

        Return();

        var toast = SweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 6000
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito");
    }


    private void Return()
    {
        PublicacionForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/Publicacion");
    }


}