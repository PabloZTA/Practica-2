@page "/ProyectoInvestigacion/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService SweetAlertService


<h3>ProyectoInvestigacionCreate</h3>

<ProyectoInvestigacionForm @ref="ProyectoInvestigacionForm" ProyectoInvestigacion="proyectoInvestigacion" OnSubmit="Create" ReturnAction="Return" />


@code {
    private ProyectoInvestigacion proyectoInvestigacion = new();
    private ProyectoInvestigacionForm ProyectoInvestigacionForm;

    private async Task Create()
    {
        var responseHttp = await repository.PostAsync("/api/ProyectoInvestigacion", proyectoInvestigacion);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await SweetAlertService.FireAsync("Error", message);
            return;
        }

        Return();

        var toast = SweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 6000
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito");
    }


    private void Return()
    {
        ProyectoInvestigacionForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/ProyectoInvestigacion");
    }


}