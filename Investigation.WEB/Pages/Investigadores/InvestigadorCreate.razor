@page "/Investigadores/create"
@inject IRepository repository 
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService


<h3>InvestigatorCreate</h3>
<InvestigadorForm @ref="investigadorForm" Investigador="investigador" OnSubmit="Create" ReturnAction="Return" />



@code {
    private Investigador investigador = new();
    private InvestigadorForm investigadorForm;
    private async Task Create()
    {


        var responseHttp = await repository.PostAsync("/api/Investigadores", investigador);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message);
            return;
        }

        Return();

        var toast = sweetAlertService.Mixin(new SweetAlertOptions
        {
                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000

        });


        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito");
    }


    private void Return()
    {
        investigadorForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/Investigadores");

    }


}